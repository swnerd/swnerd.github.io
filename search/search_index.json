{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Conductor for Gluent is an application to help manage Gluent offloads. The Gluent software works on a per database basis. Conductor has an additional unit above a database called a site. A particular installation of Conductor will have one site with one or more databases to manage. Login Enter the Conductor for Gluent Apex URL into your browser. The URL will be something of the form: http://{hostname}:{port}/apex/f?p=100 Once the Conductor for Gluent login form is available, then enter your username and password for Conductor for Gluent. Site For Conductor, a site is made up of multiple databases. Site Home Page From the site home: You can manage site level options: Default Offload Parameters Default Present Parameters Site Level Notification Options Application Defaults Review metrics at the site level: Job Metrics Amount of Data Offloaded Amount of Space that hasn't been selected from the Gluent Advisor Report Add a New Database - Click on the Add New card from the list. Select a Database to Manage - Click on one of the database cards, to manage it's jobs and tables. Edit the details of a database - Click on the Edit Link of a database to change it's description, icon color, database link information, etc. Site Level Offload Parameters Parameters listed here will be used for every offload command executed across all the databases. Any common or offload type parameter can be added; however, there are few parameters that you would want to apply to all of your offloads. The only example that I have come across was the use of the parameter \"--count-star-expression\". Site Level Present Parameters Parameters listed here will be used for every present command across all the databases. Any common or present type parameter can be added; however, there are few parameters that you would want to apply to all of your present commands. Site Level Notifications Options The implementation of notifications is different than that of parameters. For notifications, the job notifications override the database notifications which override the site notifications. Values entered at the site level will be used when there are no notifications at the database level and at the job level. Notifications are sent at the following points of a job: When Job Begins When Job Succeeds When Job has an Error Notifications can be enabled and disabled. Site Level Application Defaults The application defaults are parameters that affect the way the Conductor for Gluent functions. Here is a list of the parameters and how they work: JOB_LAUNCH_INTERVAL \u2013 Controls the granularity of the drop down for minutes in the job scheduler. If set to 1, you can specify any minute of the hour (0-59). If you specify 15, you can specify 0, 15, 30, 45. OFFLOAD_DROP_RATIO \u2013 Controls the default value for the DROP_THRESHOLD on tables. The value in this field will be multiplied with the OFFLOAD_THRESHOLD to determine the default for the DROP_THRESHOLD. CREATE_HADOOP_DB \u2013 Controls whether the parameter \u2013create-hadoop-db will be included on offload commands. If the Hadoop cluster allows the gluent user to create databases, then it should be set to YES. If the Hadoop cluster does not allow the gluent user to create databases, then set to NO. OFFLOAD_DROP_ACTION \u2013 This is the site-wide default for whether an offload job step should attempt to GENERATE : Generate a script to drop the offloaded partitions after an offload is completed based on Drop Threshold. AUTO : Drop the offloaded partitions after a table is offload based on Drop Threshold. MANUAL : Do Nothing after offload is completed. The OFFLOAD_DROP_ACTION can be over-ridden at the table level. Database Database Home Page After clicking on a database on the Site Home, you will go to the database home page for that particular database. At the top of the screen it shows some summary information about the database: Advisor Candidates \u2013 # of tables in the advisor report that have not been selected for offload. Select Tables \u2013 # of tables that have been selected as candidates for offload. Total Jobs \u2013 # of jobs that have been created. Running Jobs \u2013 # of jobs currently running. Successful Jobs \u2013 # of jobs that completed successfully. Jobs in Error State \u2013 # of jobs where an error has occurred. Below you will find metrics at the database level for the selected database: Job Metrics Amount of Data Offloaded Amount of Space that hasn't been selected from the Gluent Advisor Report From this page, the menu options expand to include access to: Dashboard Job Maintenance Table Review Candidate Selection Screen to Edit Database Details Screens to set offload, present and notification parameters at the database level Add/Edit Database The database name, description and connection method can be specified on this screen. Then press Add button. To update the database link information (if that is being used), is done by pressing on the DB Link Wizard button. DB Link Wizard \u2013 Step 1 Enter the host name, port, service name, and password. Press Next to create the database link. DB Link Wizard \u2013 Step 2 Press Test DB Link to verify that the database link is correct. Press Finish if the test is successful. Press the left arrow to go back and correct any of the database link information. DB Level Offload Parameters Parameters listed here will be used for every offload command executed for this database. Any common or offload type parameter can be added; however, there are few parameters that you would want to apply to all of your database offloads. DB Level Present Parameters Parameters listed here will be used for every present command executed for this database. Any common or present type parameter can be added; however, there are few parameters that you would want to apply to all of your database present commands. DB Level Notifications Options The implementation of notifications is different than that of parameters. For notifications, the job notifications override the database notifications which override the site notifications. Values entered at the database level will be used when there are no notifications at the job level. Notifications are sent at the following points of a job: When Job Begins When Job Succeeds When Job has an Error Notifications can be enabled and disabled. Tables Candidate Selection Wizard Step 1 \u2013 Select an Advisor Output File : Select a file or if this is your second time through, you can use the existing file. Multiple files can be uploaded if a new advisor report CSV is obtained. Press Next to continue. Step 2 \u2013 Select Tables : Select one or more tables that you want to offload. Press Next to continue. Step 3 \u2013 Table Thresholds : The default offload threshold will be determined from the Advisor report. The drop threshold default will be calculated using the application parameter OFFLOAD_DROP_RATIO * offload threshold. Either threshold may be updated if desired. Press Next to continue. Step 4 \u2013 Partition Details : If a database link is in use, then the partition details will be automatically loaded from the database into the repository. If no connection is available, the partition details will need to be entered manually. Additionally, a column mask can be selected for numbers or strings that represent dates. Press Finish to complete the wizard. Table Review The table review screen allows you to add a new table and view information about the tables that have been selected to offload. The following details about tables are available: For all tables, you can: View and Update table level offload parameters Review the Oracle Offload Datasets Review the Hadoop Offload Datasets Additionally, for partitioned tables, you can: View and pdate the partition details View and update the offload and drop threshold, as well as, the offload drop action. Add Table Wizard To add a new table, click the Add Table Wizard button. When a database link is allowed, the first screen of the Add Table Wizard will have select lists for the schemas and table names. When next is hit, the partitioning information will be automatically gathered. When no connection is allowed, you will need to manually enter the correct schema, table_name and partitioning type. The second screen of the Add Table Wizard will be used to specify the Offload and Drop Thresholds for partition tables. No information is entered for non-partitioned tables. The third screen of the Add Table Wizard is used to specify the partition keys when no connection is allowed. Plus, date masking can be specified for cases where a string or number is used to represent a date. No information is entered for non-partitioned tables. Jobs Job Maintenance Main Screen The main screen for job maintenance contains cards, each with a job on it. Jobs can be selected by clicking on the card. Clicking on the current card allows the editing of details about the job. The job steps are editable in this screen. The Job Add Wizard and calendar view are available by pressing the corresponding buttons. Jobs - Duplicate Table Job Configuration When there are duplicate copies of tables that need to be offloaded in multiple schemas. An example of this would be if a company had a schema per client with the same tables under each schema. A Duplicate Table Job is added through the Add Job Wizard , however, only step 1 is entered. After completing step 1, you will be taken back to the main job maintenance screen. Once you select the job, you can start adding elements to the configuration. The different types of elements in a configuration are: Duplicate Enter duplicate table details. Only a table name is specified (no schema/owner), as there are multiple duplicate tables across the database The duplicate element will look for the specified table name across all schemas in the database. Include Enter the details for a specific table that should be included in the job. Enter a full table name with owner/schema and table names specified. Exclude Enter the details for a specific table that should be excluded in the job. Enter a full table name with owner/schema and table names specified. Example A call center company has one schema for each client that they service through their call center. Under each of those client schemas, they have a CALL_DETAILS table which needs to be offload. In addition, they have a training schema, which has a CALL_DETAILS table that should not be offloaded. The configuration elements for this scenario are: Duplicate, CALL_DETAILS Exclude, TRAINING.CALL_DETAILS This will result in a job being geneated based on the frequency desired that will have all of the CALL_DETAILS tables except the one from the TRAINING schema. Add Job Wizard Step 1: Job Name and Type The job name can be any alpha-numeric characters. The job description is a free form field. The job type is going to be Normal most of the time. Press Next to continue. Note: A rare case calls for a Duplicate Table job type, when there are duplicate copies of tables that need to be offloaded in multiple schemas. An example of this would be if a company had a schema per client with the same tables under each schema. A Duplicate Table job does not have defined steps. This job type will be covered in a separate section. Step 2: Job Steps Select the step type. Then select the table for the step. Select if the step is enabled or disabled. All steps also have a step comment. Other fields will depend on the step type. Press Next to continue. Step 3: Job Schedule Jobs can be scheduled on a Monthly, Weekly, Daily, or Hourly basis. With each, you must select the appropriate details: Monthly \u2013 day of the month (1-28), hour and minute Weekly \u2013 day of the week, hour and minute Daily \u2013 hour and minute Hourly \u2013 minute Only jobs with complete information can be enabled. Jobs - Future Calendar Based on the job scheduling information that has been entered, you can view when jobs will run to help see when there might be conflicts with a maintenance outage or too many jobs running at once. Dashboard The dashboard allows for monitoring of running jobs and shows some statistics on offloaded tables. Job States The donut graph shows a summary by state of the jobs. The state pieces can be clicked on to drill down into the details. Recent Jobs The 10 most recent jobs. Drilldown to the Current Run of the Job, by clicking on the ID. Also, the job name can be selected to drill down to the job details. Bytes Comparison Bytes used in Impala versus the bytes used in Oracle Space Recovery In orange is the amount of space that could be recovered if data was truncated/dropped from the offload partitions. In red, we have the amount of data that was truncated/dropped from oracle after offload.","title":"User Guide"},{"location":"#introduction","text":"Conductor for Gluent is an application to help manage Gluent offloads. The Gluent software works on a per database basis. Conductor has an additional unit above a database called a site. A particular installation of Conductor will have one site with one or more databases to manage.","title":"Introduction"},{"location":"#login","text":"Enter the Conductor for Gluent Apex URL into your browser. The URL will be something of the form: http://{hostname}:{port}/apex/f?p=100 Once the Conductor for Gluent login form is available, then enter your username and password for Conductor for Gluent.","title":"Login"},{"location":"#site","text":"For Conductor, a site is made up of multiple databases.","title":"Site"},{"location":"#site-home-page","text":"From the site home: You can manage site level options: Default Offload Parameters Default Present Parameters Site Level Notification Options Application Defaults Review metrics at the site level: Job Metrics Amount of Data Offloaded Amount of Space that hasn't been selected from the Gluent Advisor Report Add a New Database - Click on the Add New card from the list. Select a Database to Manage - Click on one of the database cards, to manage it's jobs and tables. Edit the details of a database - Click on the Edit Link of a database to change it's description, icon color, database link information, etc.","title":"Site Home Page"},{"location":"#site-level-offload-parameters","text":"Parameters listed here will be used for every offload command executed across all the databases. Any common or offload type parameter can be added; however, there are few parameters that you would want to apply to all of your offloads. The only example that I have come across was the use of the parameter \"--count-star-expression\".","title":"Site Level Offload Parameters"},{"location":"#site-level-present-parameters","text":"Parameters listed here will be used for every present command across all the databases. Any common or present type parameter can be added; however, there are few parameters that you would want to apply to all of your present commands.","title":"Site Level Present Parameters"},{"location":"#site-level-notifications-options","text":"The implementation of notifications is different than that of parameters. For notifications, the job notifications override the database notifications which override the site notifications. Values entered at the site level will be used when there are no notifications at the database level and at the job level. Notifications are sent at the following points of a job: When Job Begins When Job Succeeds When Job has an Error Notifications can be enabled and disabled.","title":"Site Level Notifications Options"},{"location":"#site-level-application-defaults","text":"The application defaults are parameters that affect the way the Conductor for Gluent functions. Here is a list of the parameters and how they work: JOB_LAUNCH_INTERVAL \u2013 Controls the granularity of the drop down for minutes in the job scheduler. If set to 1, you can specify any minute of the hour (0-59). If you specify 15, you can specify 0, 15, 30, 45. OFFLOAD_DROP_RATIO \u2013 Controls the default value for the DROP_THRESHOLD on tables. The value in this field will be multiplied with the OFFLOAD_THRESHOLD to determine the default for the DROP_THRESHOLD. CREATE_HADOOP_DB \u2013 Controls whether the parameter \u2013create-hadoop-db will be included on offload commands. If the Hadoop cluster allows the gluent user to create databases, then it should be set to YES. If the Hadoop cluster does not allow the gluent user to create databases, then set to NO. OFFLOAD_DROP_ACTION \u2013 This is the site-wide default for whether an offload job step should attempt to GENERATE : Generate a script to drop the offloaded partitions after an offload is completed based on Drop Threshold. AUTO : Drop the offloaded partitions after a table is offload based on Drop Threshold. MANUAL : Do Nothing after offload is completed. The OFFLOAD_DROP_ACTION can be over-ridden at the table level.","title":"Site Level Application Defaults"},{"location":"#database","text":"","title":"Database"},{"location":"#database-home-page","text":"After clicking on a database on the Site Home, you will go to the database home page for that particular database. At the top of the screen it shows some summary information about the database: Advisor Candidates \u2013 # of tables in the advisor report that have not been selected for offload. Select Tables \u2013 # of tables that have been selected as candidates for offload. Total Jobs \u2013 # of jobs that have been created. Running Jobs \u2013 # of jobs currently running. Successful Jobs \u2013 # of jobs that completed successfully. Jobs in Error State \u2013 # of jobs where an error has occurred. Below you will find metrics at the database level for the selected database: Job Metrics Amount of Data Offloaded Amount of Space that hasn't been selected from the Gluent Advisor Report From this page, the menu options expand to include access to: Dashboard Job Maintenance Table Review Candidate Selection Screen to Edit Database Details Screens to set offload, present and notification parameters at the database level","title":"Database Home Page"},{"location":"#addedit-database","text":"The database name, description and connection method can be specified on this screen. Then press Add button. To update the database link information (if that is being used), is done by pressing on the DB Link Wizard button.","title":"Add/Edit Database"},{"location":"#db-link-wizard-step-1","text":"Enter the host name, port, service name, and password. Press Next to create the database link.","title":"DB Link Wizard \u2013 Step 1"},{"location":"#db-link-wizard-step-2","text":"Press Test DB Link to verify that the database link is correct. Press Finish if the test is successful. Press the left arrow to go back and correct any of the database link information.","title":"DB Link Wizard \u2013 Step 2"},{"location":"#db-level-offload-parameters","text":"Parameters listed here will be used for every offload command executed for this database. Any common or offload type parameter can be added; however, there are few parameters that you would want to apply to all of your database offloads.","title":"DB Level Offload Parameters"},{"location":"#db-level-present-parameters","text":"Parameters listed here will be used for every present command executed for this database. Any common or present type parameter can be added; however, there are few parameters that you would want to apply to all of your database present commands.","title":"DB Level Present Parameters"},{"location":"#db-level-notifications-options","text":"The implementation of notifications is different than that of parameters. For notifications, the job notifications override the database notifications which override the site notifications. Values entered at the database level will be used when there are no notifications at the job level. Notifications are sent at the following points of a job: When Job Begins When Job Succeeds When Job has an Error Notifications can be enabled and disabled.","title":"DB Level Notifications Options"},{"location":"#tables","text":"","title":"Tables"},{"location":"#candidate-selection-wizard","text":"Step 1 \u2013 Select an Advisor Output File : Select a file or if this is your second time through, you can use the existing file. Multiple files can be uploaded if a new advisor report CSV is obtained. Press Next to continue. Step 2 \u2013 Select Tables : Select one or more tables that you want to offload. Press Next to continue. Step 3 \u2013 Table Thresholds : The default offload threshold will be determined from the Advisor report. The drop threshold default will be calculated using the application parameter OFFLOAD_DROP_RATIO * offload threshold. Either threshold may be updated if desired. Press Next to continue. Step 4 \u2013 Partition Details : If a database link is in use, then the partition details will be automatically loaded from the database into the repository. If no connection is available, the partition details will need to be entered manually. Additionally, a column mask can be selected for numbers or strings that represent dates. Press Finish to complete the wizard.","title":"Candidate Selection Wizard"},{"location":"#table-review","text":"The table review screen allows you to add a new table and view information about the tables that have been selected to offload. The following details about tables are available: For all tables, you can: View and Update table level offload parameters Review the Oracle Offload Datasets Review the Hadoop Offload Datasets Additionally, for partitioned tables, you can: View and pdate the partition details View and update the offload and drop threshold, as well as, the offload drop action.","title":"Table Review"},{"location":"#add-table-wizard","text":"To add a new table, click the Add Table Wizard button. When a database link is allowed, the first screen of the Add Table Wizard will have select lists for the schemas and table names. When next is hit, the partitioning information will be automatically gathered. When no connection is allowed, you will need to manually enter the correct schema, table_name and partitioning type. The second screen of the Add Table Wizard will be used to specify the Offload and Drop Thresholds for partition tables. No information is entered for non-partitioned tables. The third screen of the Add Table Wizard is used to specify the partition keys when no connection is allowed. Plus, date masking can be specified for cases where a string or number is used to represent a date. No information is entered for non-partitioned tables.","title":"Add Table Wizard"},{"location":"#jobs","text":"","title":"Jobs"},{"location":"#job-maintenance-main-screen","text":"The main screen for job maintenance contains cards, each with a job on it. Jobs can be selected by clicking on the card. Clicking on the current card allows the editing of details about the job. The job steps are editable in this screen. The Job Add Wizard and calendar view are available by pressing the corresponding buttons.","title":"Job Maintenance Main Screen"},{"location":"#jobs-duplicate-table-job-configuration","text":"When there are duplicate copies of tables that need to be offloaded in multiple schemas. An example of this would be if a company had a schema per client with the same tables under each schema. A Duplicate Table Job is added through the Add Job Wizard , however, only step 1 is entered. After completing step 1, you will be taken back to the main job maintenance screen. Once you select the job, you can start adding elements to the configuration. The different types of elements in a configuration are: Duplicate Enter duplicate table details. Only a table name is specified (no schema/owner), as there are multiple duplicate tables across the database The duplicate element will look for the specified table name across all schemas in the database. Include Enter the details for a specific table that should be included in the job. Enter a full table name with owner/schema and table names specified. Exclude Enter the details for a specific table that should be excluded in the job. Enter a full table name with owner/schema and table names specified. Example A call center company has one schema for each client that they service through their call center. Under each of those client schemas, they have a CALL_DETAILS table which needs to be offload. In addition, they have a training schema, which has a CALL_DETAILS table that should not be offloaded. The configuration elements for this scenario are: Duplicate, CALL_DETAILS Exclude, TRAINING.CALL_DETAILS This will result in a job being geneated based on the frequency desired that will have all of the CALL_DETAILS tables except the one from the TRAINING schema.","title":"Jobs - Duplicate Table Job Configuration"},{"location":"#add-job-wizard","text":"Step 1: Job Name and Type The job name can be any alpha-numeric characters. The job description is a free form field. The job type is going to be Normal most of the time. Press Next to continue. Note: A rare case calls for a Duplicate Table job type, when there are duplicate copies of tables that need to be offloaded in multiple schemas. An example of this would be if a company had a schema per client with the same tables under each schema. A Duplicate Table job does not have defined steps. This job type will be covered in a separate section. Step 2: Job Steps Select the step type. Then select the table for the step. Select if the step is enabled or disabled. All steps also have a step comment. Other fields will depend on the step type. Press Next to continue. Step 3: Job Schedule Jobs can be scheduled on a Monthly, Weekly, Daily, or Hourly basis. With each, you must select the appropriate details: Monthly \u2013 day of the month (1-28), hour and minute Weekly \u2013 day of the week, hour and minute Daily \u2013 hour and minute Hourly \u2013 minute Only jobs with complete information can be enabled.","title":"Add Job Wizard"},{"location":"#jobs-future-calendar","text":"Based on the job scheduling information that has been entered, you can view when jobs will run to help see when there might be conflicts with a maintenance outage or too many jobs running at once.","title":"Jobs - Future Calendar"},{"location":"#dashboard","text":"The dashboard allows for monitoring of running jobs and shows some statistics on offloaded tables. Job States The donut graph shows a summary by state of the jobs. The state pieces can be clicked on to drill down into the details. Recent Jobs The 10 most recent jobs. Drilldown to the Current Run of the Job, by clicking on the ID. Also, the job name can be selected to drill down to the job details. Bytes Comparison Bytes used in Impala versus the bytes used in Oracle Space Recovery In orange is the amount of space that could be recovered if data was truncated/dropped from the offload partitions. In red, we have the amount of data that was truncated/dropped from oracle after offload.","title":"Dashboard"},{"location":"installation/","text":"Backend Software Installations Conductor for Gluent Backend Software Usage Options The Conductor for Gluent Backend (evolved from AEG Gluent Toolkit) has three possible modes of operation: Standalone mode Local repository mode Full Conductor for Gluent Front-end and Back-end with Central Repository The standalone and local repository modes of operation have been around and used in production environments for several years (initial deployment to a production environment in Q1 2017). Enhancements have been done over the subsequent time period, including the local repository mode. The central repository integration with Conductor for Gluent frontend was done in 2019. Standalone No additional software is needed or required. The software just provides a consistent job-oriented method for running gluent offloads. Jobs are setup through flat \"job\" files. Scheduling of the individual jobs requires a cron entry per job. Standalone with local repository Same as standalone. Additionally, some result information is stored in tables under the gluent_adm schema, such as, tables offloaded, job success, when possible some information on bytes transferred. Full Conductor for Gluent with Central Repository Jobs are configured and scheduled through the front-end software. A single cron job is required to handle the launching of jobs based on schedule in the central repository. All information gathered about the job success, partitions offloaded, etc is stored in the central repository. Prerequisites Gluent Software Installed Cloudera with Impala only parquet-tools available in the path of the edge node for the ssh user when using Full Conductor for Gluent Front-end and Back-end with Central Repository - usually found in /var/lib/alternatives. Central Repository Database Installed (see C4G Frontend Setup Guide) Unpack Software A tar file will be supplied. The tar file should be unpacked in a directory such as, c4g-scripts or scripts or similar. For example: cd /u01/app/gluent mkdir c4g-scripts cd c4g-scripts tar xf {tar file name} Environment File Setup Note on split configuration : If gluent is setup in a split configuration, then certain scripts will not function, and certain variables are not set in the environment files. conductor_for_gluent.env A template for the conductor_for_gluent.env file can be found under the env/templates directory - it is recommended that you copy the template file as a starting point. PATH - This export of the path is to make sure the oraenv script is in the path. ORACLE_SID - Set this to the Oracle SID of the database which is being offloaded. ORAENV_ASK - Set for no prompts. oraenv - script to set the oracle environment. Unset ORAENV_ASK As this shell script runs SQL, the SQL_PATH variable is unset, so as not to get possible interference (same name scripts, login.sql files, etc). OFFLOAD_HOME=\"/u01/app/gluent/offload\" - Update OFFLOAD_HOME to the location of the gluent software offload home. . $OFFLOAD_HOME/conf/offload.env - DO NOT CHANGE C4G_REPO NONE - No Repository; standalone mode without a repository RUNTIME- run a local repository that stores information generated a runtime FULL - run a central repository that stores information about jobs, schedules, etc. HADOOP_HOST - defaults to the HDFS_CMD_HOST HADOOP_SSH_USER - set to the target user on hadoop for ssh G_ERROR_WORDS - Words and phrases used when determining if a possible error occurred. TNS_ADMIN - Always set to ${tnsdir} - DO NOT CHANGE AEG_GLUENT_REPO_SERVICE - service name to be used when connecting to the central repository AEG_GLUENT_LOCAL_SERVICE - service name to be used when connecting to the local database dstr - service name used in local repository and standalone mode impala_node - automatically determined but can be overridden IMPALA_SHELL_CMD - command with options need to run impala-shell run-gluent-job.env A template for the file can be found under the env/templates directory - it is recommended that you copy the template file as a starting point. PRECREATED_DBS - true or false (defaults to false) Only add/update if gluent is not allowed to create databases on impala G_BEGIN_NOTIFY - true or false G_BEGIN_MAIL_LIST - email addresses space separated in quotes. G_SUCCESS_NOTIFY - true or false G_SUCCESS_MAIL_LIST - email addresses space separated in quotes. G_ERROR_NOTIFY -true or false G_ERROR_MAIL_LIST - email addresses space separated in quotes. setup-wallet.env A template for the file can be found under the env/templates directory - it is recommended that you copy the template file as a starting point. AEG_WALLET_LOCATION=/u01/app/gluent/scripts/tns - update to the location to contain the wallet WALLET_ENTRY - the wallet entry you want to setup (corresponds to a TNS service name) Configuration File Setup If not running in the Central Repository mode, then 2 configuration files can be created to set default offload and present parameters. offload-defaults.cfg present-defaults.cfg User Setup in Local Database for Central Repository Mode A user is needed in the local database with the following username: CONDUCTOR_FOR_GLUENT create user conductor_for_gluent identified by \"{complex password}\" default tablespace users temporary tablespace temp; The privileges needed are: GRANT CONNECT TO CONDUCTOR_FOR_GLUENT; GRANT GLUENT_OFFLOAD_ROLE TO CONDUCTOR_FOR_GLUENT; GRANT SELECT ANY DICTIONARY TO CONDUCTOR_FOR_GLUENT; GRANT SELECT ANY TABLE TO CONDUCTOR_FOR_GLUENT; -- Needed for Conductor for Gluent to do partition maintenance GRANT DROP ANY TABLE TO CONDUCTOR_FOR_GLUENT; GRANT ALTER ANY TABLE TO CONDUCTOR_FOR_GLUENT; An alternative to the ANY TABLE privilege is to preform the grant(s) on the tables to be offloaded. TNS Setup This is needed for all 3 modes of the backend software. TNSNAMES.ORA A TNSNAMES.ORA file needs to be created in the tns subdirectory. For the no repository option or the local repository option, one entry for the local DB being offloaded is needed. For the central repository mode, two entries are needed: one for local DB and a second for the central repository. Suggested names are as follows: c4g_local c4g_central Historically, the tns entry was: gluent_conn A sample file is located under the tns/sample directory, showing a simple tns entry. Wallet Setup For Full Conductor for Gluent, run the following: ./setup-wallet new c4g_local ./setup-wallet add c4g_central For Standalone or Runtime Repository modes, run the following: ./setup-wallet new gluent_conn Crontab Setup Once the backend and frontend software are installed, add a cron entry to run the launch script. The job should be like the following with the appropriate path specified: * * * * * /u01/app/gluent/scripts/bin/launch-gluent-jobs /u01/app/gluent/scripts/log/launch-gluent-jobs-cron.log 2 1 Front End Installation Prerequisites Oracle 12+ Database (created with DBCA or Manually) Note : Apex requires that Oracle Text and JVM options be installed. No other options are required. Apex 19.2 Setup Create Tablespace for Apex (if one does not exist) SQL -- Create Tablespace for Apex - Example create tablespace tbs_apex datafile '/u01/app/oracle/oradata/testinst/tbs_apex01.dbf' size 100m autoextend on maxsize 1000m; Copy Apex 19.2 to database host Example Copy to Oracle User Home scp apex_19.2_en.zip {oracle user}@{db host}:. Remove Existing Apex Software Remove Apex from database (if necessary) cd $ORACLE_HOME/apex sqlplus / as sysdba SQL -- Disable existing EXEC DBMS_XDB.SETHTTPPORT(0); SQL SQL -- Remove Apex @apxremov.sql PL/SQL procedure successfully completed. ... ... ... ... ...Application Express Removed ******************************************************************** ** You must exit this SQL*Plus session before running apexins.sql ** ******************************************************************** SQL exit Move original apex software out of the way cd $ORACLE_HOME mv apex apex.orig Install Apex Unzip Apex 19.2 software example statement if uploaded to user's home directory: cd $ORACLE_HOME unzip ~/apex_19.2_en.zip Install Apex 19.2 in database cd $ORACLE_HOME/apex sqlplus / as sysdba SQL -- Runtime install with 4 parms (apex tbs, apex tbs, temp tbs, image loc) @apxrtins.sql tbs_apex tbs_apex temp /i/ ...set_appun.sql PL/SQL procedure successfully completed. ... ... ... ... PL/SQL procedure successfully completed. Thank you for installing Oracle Application Express 19.2.0.00.18 Oracle Application Express is installed in the APEX_190200 schema. The structure of the link to the Application Express administration services is as follows: http://host:port/pls/apex/apex_admin (Oracle HTTP Server with mod_plsql) http://host:port/apex/apex_admin (Oracle XML DB HTTP listener with the embedded PL/SQL gateway) http://host:port/apex/apex_admin (Oracle REST Data Services) The structure of the link to the Application Express development interface is as follows: http://host:port/pls/apex (Oracle HTTP Server with mod_plsql) http://host:port/apex (Oracle XML DB HTTP listener with the embedded PL/SQL gateway) http://host:port/apex (Oracle REST Data Services) timing for: Phase 3 (Switch) Elapsed: 00:00:08.39 timing for: Complete Installation Elapsed: 00:06:24.88 PL/SQL procedure successfully completed. Change / Setup Apex Administrator cd $ORACLE_HOME/apex sqlplus / as sysdba SQL -- no parameters @apxchpwd.sql ...set_appun.sql ================================================================================ This script can be used to change the password of an Application Express instance administrator. If the user does not yet exist, a user record will be created. ================================================================================ Enter the administrator's username [ADMIN] User \"ADMIN\" does not yet exist and will be created. Enter ADMIN's email [ADMIN] {specify email address} Enter ADMIN's password [] Created instance administrator ADMIN. Enable Embedded PL/SQL Gateway and other configuration items cd $ORACLE_HOME/apex sqlplus / as sysdba SQL -- one parameter is oracle_home @apex_epg_config.sql /u01/app/oracle/product/12.2.0/dbhome_1 PL/SQL procedure successfully completed. ... ... ... ... PL/SQL procedure successfully completed. Commit complete. alter user anonymous identified by {complex password} account unlock; alter user xdb identified by {complex password} account unlock; EXEC DBMS_XDB.SETHTTPPORT(8080); BEGIN DBMS_NETWORK_ACL_ADMIN.APPEND_HOST_ACE( host = '*', ace = xs$ace_type(privilege_list = xs$name_list('connect'), principal_name = 'APEX_180200', principal_type = xs_acl.ptype_db)); END; / -- Below script contents can be found in Appendix A of this document @xdbconfig_anonymous.sql Schema Install Create Tablespace Create tablespace to contain the conductor_for_gluent's repository, for example: create tablespace tbs_c4g datafile '+dg_data' size 100M autoextend on next 1M maxsize 100M; or create tablespace tbs_c4g datafile '/u01/app/oracle/oradata/testinst/tbs_c4g01.dbf' size 100M autoextend on next 1M maxsize 1000M; Create User and Privileges Create user conductor_for_gluent with above tablespace as the default tablespace, for example: create user conductor_for_gluent identified by \"{complex password}\" default tablespace tbs_c4g; alter user conductor_for_gluent quota unlimited on tbs_c4g; grant connect to conductor_for_gluent; grant resource to conductor_for_gluent; grant create database link to conductor_for_gluent; grant create synonym to conductor_for_gluent; grant create view to conductor_for_gluent; grant select any dictionary to conductor_for_gluent; grant select any table to conductor_for_gluent; Install and Setup the Objects The installation SQL scripts are located in gui directory where the backend scripts were installed (usually /u01/app/gluent/scripts or /u01/app/gluent/c4g-scripts . From this directory connect to the apex database (usually c4g_central is the tns name to use: You can set your environment to use the tnsnames.ora file you created during the backend setup. For example: cd /u01/app/gluent/c4g-scripts/tns export TNS_ADMIN=`pwd` cd ../gui sqlplus system/{complex password}@c4g_central Schema Setup Run the sql, no parameters - 1 prompt for tablespace spool c4g-setup-schema.log @c4g-setup-schema.sql Tablespace: tbs_c4g spool off Source Setup Run the sql, no parameters spool c4g-setup-source.log @c4g-setup-source.sql spool off Seed Data Setup Run the sql, no parameters spool c4g-setup-seeddata.log @c4g-setup-seeddata.sql commit; spool off Note : Be sure to commit after running the script. Help Text Setup Run the sql, no parameters spool c4g-setup-helptext.log @c4g-setup-helptext.sql commit; spool off Note : Be sure to commit after running the script. Apex Application Install Create the Workspace SQL -- run the sql, no parameters @c4g-apex-workspace.sql \"Import\" the runtime app (sql script) SQL -- run the sql, no parameters @c4g-apex-application.sql Connecting to Conductor for Gluent http://{hostname}:8080/apex/f?p=100:LOGIN_DESKTOP:25119307751525::::: Default Users Admin User: c4g_admin App User: c4g_user Please contact your Conductor for Gluent provider for password. \u2003 Appendix A - xdbconfig_anonymous.sql DECLARE l_configxml XMLTYPE; l_value VARCHAR2(5) := 'true'; BEGIN l_configxml := DBMS_XDB.cfg_get(); IF l_configxml.existsNode('/xdbconfig/sysconfig/protocolconfig/httpconfig/allow-repository-anonymous-access') = 0 THEN -- Add config element begin SELECT insertChildXML( l_configxml , '/xdbconfig/sysconfig/protocolconfig/httpconfig' , 'allow-repository-anonymous-access' , XMLType(' allow-repository-anonymous-access xmlns=\"http://xmlns.oracle.com/xdb/xdbconfig.xsd\" ' || l_value || ' /allow-repository-anonymous-access ') , 'xmlns=\"http://xmlns.oracle.com/xdb/xdbconfig.xsd\"' ) INTO l_configxml FROM dual; exception when others then dbms_output.put_line( 'insert' ); -- ' raise; end; DBMS_OUTPUT.put_line('xdbconfig for anonymous now inserted.'); ELSE -- Update existing config element. begin SELECT updateXML( DBMS_XDB.cfg_get() , '/xdbconfig/sysconfig/protocolconfig/httpconfig/allow-repository-anonymous-access/text()' , XMLType(' allow-repository-anonymous-access xmlns=\"http://xmlns.oracle.com/xdb/xdbconfig.xsd\" ' || l_value || ' /allow-repository-anonymous-access ') , 'xmlns=\"http://xmlns.oracle.com/xdb/xdbconfig.xsd\"' ) INTO l_configxml FROM dual; exception when others then dbms_output.put_line( 'update'); -- ' raise; end; DBMS_OUTPUT.put_line('xdbconfig for anonymous now updated.'); END IF; DBMS_XDB.cfg_update(l_configxml); DBMS_XDB.cfg_refresh; END; /","title":"Installation"},{"location":"installation/#backend-software-installations","text":"","title":"Backend Software Installations"},{"location":"installation/#conductor-for-gluent-backend-software-usage-options","text":"The Conductor for Gluent Backend (evolved from AEG Gluent Toolkit) has three possible modes of operation: Standalone mode Local repository mode Full Conductor for Gluent Front-end and Back-end with Central Repository The standalone and local repository modes of operation have been around and used in production environments for several years (initial deployment to a production environment in Q1 2017). Enhancements have been done over the subsequent time period, including the local repository mode. The central repository integration with Conductor for Gluent frontend was done in 2019.","title":"Conductor for Gluent Backend Software Usage Options"},{"location":"installation/#standalone","text":"No additional software is needed or required. The software just provides a consistent job-oriented method for running gluent offloads. Jobs are setup through flat \"job\" files. Scheduling of the individual jobs requires a cron entry per job.","title":"Standalone"},{"location":"installation/#standalone-with-local-repository","text":"Same as standalone. Additionally, some result information is stored in tables under the gluent_adm schema, such as, tables offloaded, job success, when possible some information on bytes transferred.","title":"Standalone with local repository"},{"location":"installation/#full-conductor-for-gluent-with-central-repository","text":"Jobs are configured and scheduled through the front-end software. A single cron job is required to handle the launching of jobs based on schedule in the central repository. All information gathered about the job success, partitions offloaded, etc is stored in the central repository.","title":"Full Conductor for Gluent with Central Repository"},{"location":"installation/#prerequisites","text":"Gluent Software Installed Cloudera with Impala only parquet-tools available in the path of the edge node for the ssh user when using Full Conductor for Gluent Front-end and Back-end with Central Repository - usually found in /var/lib/alternatives. Central Repository Database Installed (see C4G Frontend Setup Guide)","title":"Prerequisites"},{"location":"installation/#unpack-software","text":"A tar file will be supplied. The tar file should be unpacked in a directory such as, c4g-scripts or scripts or similar. For example: cd /u01/app/gluent mkdir c4g-scripts cd c4g-scripts tar xf {tar file name}","title":"Unpack Software"},{"location":"installation/#environment-file-setup","text":"Note on split configuration : If gluent is setup in a split configuration, then certain scripts will not function, and certain variables are not set in the environment files.","title":"Environment File Setup"},{"location":"installation/#conductor_for_gluentenv","text":"A template for the conductor_for_gluent.env file can be found under the env/templates directory - it is recommended that you copy the template file as a starting point. PATH - This export of the path is to make sure the oraenv script is in the path. ORACLE_SID - Set this to the Oracle SID of the database which is being offloaded. ORAENV_ASK - Set for no prompts. oraenv - script to set the oracle environment. Unset ORAENV_ASK As this shell script runs SQL, the SQL_PATH variable is unset, so as not to get possible interference (same name scripts, login.sql files, etc). OFFLOAD_HOME=\"/u01/app/gluent/offload\" - Update OFFLOAD_HOME to the location of the gluent software offload home. . $OFFLOAD_HOME/conf/offload.env - DO NOT CHANGE C4G_REPO NONE - No Repository; standalone mode without a repository RUNTIME- run a local repository that stores information generated a runtime FULL - run a central repository that stores information about jobs, schedules, etc. HADOOP_HOST - defaults to the HDFS_CMD_HOST HADOOP_SSH_USER - set to the target user on hadoop for ssh G_ERROR_WORDS - Words and phrases used when determining if a possible error occurred. TNS_ADMIN - Always set to ${tnsdir} - DO NOT CHANGE AEG_GLUENT_REPO_SERVICE - service name to be used when connecting to the central repository AEG_GLUENT_LOCAL_SERVICE - service name to be used when connecting to the local database dstr - service name used in local repository and standalone mode impala_node - automatically determined but can be overridden IMPALA_SHELL_CMD - command with options need to run impala-shell","title":"conductor_for_gluent.env"},{"location":"installation/#run-gluent-jobenv","text":"A template for the file can be found under the env/templates directory - it is recommended that you copy the template file as a starting point. PRECREATED_DBS - true or false (defaults to false) Only add/update if gluent is not allowed to create databases on impala G_BEGIN_NOTIFY - true or false G_BEGIN_MAIL_LIST - email addresses space separated in quotes. G_SUCCESS_NOTIFY - true or false G_SUCCESS_MAIL_LIST - email addresses space separated in quotes. G_ERROR_NOTIFY -true or false G_ERROR_MAIL_LIST - email addresses space separated in quotes.","title":"run-gluent-job.env"},{"location":"installation/#setup-walletenv","text":"A template for the file can be found under the env/templates directory - it is recommended that you copy the template file as a starting point. AEG_WALLET_LOCATION=/u01/app/gluent/scripts/tns - update to the location to contain the wallet WALLET_ENTRY - the wallet entry you want to setup (corresponds to a TNS service name)","title":"setup-wallet.env"},{"location":"installation/#configuration-file-setup","text":"If not running in the Central Repository mode, then 2 configuration files can be created to set default offload and present parameters. offload-defaults.cfg present-defaults.cfg","title":"Configuration File Setup"},{"location":"installation/#user-setup-in-local-database-for-central-repository-mode","text":"A user is needed in the local database with the following username: CONDUCTOR_FOR_GLUENT create user conductor_for_gluent identified by \"{complex password}\" default tablespace users temporary tablespace temp; The privileges needed are: GRANT CONNECT TO CONDUCTOR_FOR_GLUENT; GRANT GLUENT_OFFLOAD_ROLE TO CONDUCTOR_FOR_GLUENT; GRANT SELECT ANY DICTIONARY TO CONDUCTOR_FOR_GLUENT; GRANT SELECT ANY TABLE TO CONDUCTOR_FOR_GLUENT; -- Needed for Conductor for Gluent to do partition maintenance GRANT DROP ANY TABLE TO CONDUCTOR_FOR_GLUENT; GRANT ALTER ANY TABLE TO CONDUCTOR_FOR_GLUENT; An alternative to the ANY TABLE privilege is to preform the grant(s) on the tables to be offloaded.","title":"User Setup in Local Database for Central Repository Mode"},{"location":"installation/#tns-setup","text":"This is needed for all 3 modes of the backend software.","title":"TNS Setup"},{"location":"installation/#tnsnamesora","text":"A TNSNAMES.ORA file needs to be created in the tns subdirectory. For the no repository option or the local repository option, one entry for the local DB being offloaded is needed. For the central repository mode, two entries are needed: one for local DB and a second for the central repository. Suggested names are as follows: c4g_local c4g_central Historically, the tns entry was: gluent_conn A sample file is located under the tns/sample directory, showing a simple tns entry.","title":"TNSNAMES.ORA"},{"location":"installation/#wallet-setup","text":"For Full Conductor for Gluent, run the following: ./setup-wallet new c4g_local ./setup-wallet add c4g_central For Standalone or Runtime Repository modes, run the following: ./setup-wallet new gluent_conn","title":"Wallet Setup"},{"location":"installation/#crontab-setup","text":"Once the backend and frontend software are installed, add a cron entry to run the launch script. The job should be like the following with the appropriate path specified: * * * * * /u01/app/gluent/scripts/bin/launch-gluent-jobs /u01/app/gluent/scripts/log/launch-gluent-jobs-cron.log 2 1","title":"Crontab Setup"},{"location":"installation/#front-end-installation","text":"","title":"Front End Installation"},{"location":"installation/#prerequisites_1","text":"Oracle 12+ Database (created with DBCA or Manually) Note : Apex requires that Oracle Text and JVM options be installed. No other options are required.","title":"Prerequisites"},{"location":"installation/#apex-192-setup","text":"Create Tablespace for Apex (if one does not exist) SQL -- Create Tablespace for Apex - Example create tablespace tbs_apex datafile '/u01/app/oracle/oradata/testinst/tbs_apex01.dbf' size 100m autoextend on maxsize 1000m;","title":"Apex 19.2 Setup"},{"location":"installation/#copy-apex-192-to-database-host","text":"Example Copy to Oracle User Home scp apex_19.2_en.zip {oracle user}@{db host}:.","title":"Copy Apex 19.2 to database host"},{"location":"installation/#remove-existing-apex-software","text":"Remove Apex from database (if necessary) cd $ORACLE_HOME/apex sqlplus / as sysdba SQL -- Disable existing EXEC DBMS_XDB.SETHTTPPORT(0); SQL SQL -- Remove Apex @apxremov.sql PL/SQL procedure successfully completed. ... ... ... ... ...Application Express Removed ******************************************************************** ** You must exit this SQL*Plus session before running apexins.sql ** ******************************************************************** SQL exit Move original apex software out of the way cd $ORACLE_HOME mv apex apex.orig","title":"Remove Existing Apex Software"},{"location":"installation/#install-apex","text":"","title":"Install Apex"},{"location":"installation/#unzip-apex-192-software","text":"example statement if uploaded to user's home directory: cd $ORACLE_HOME unzip ~/apex_19.2_en.zip","title":"Unzip Apex 19.2 software"},{"location":"installation/#install-apex-192-in-database","text":"cd $ORACLE_HOME/apex sqlplus / as sysdba SQL -- Runtime install with 4 parms (apex tbs, apex tbs, temp tbs, image loc) @apxrtins.sql tbs_apex tbs_apex temp /i/ ...set_appun.sql PL/SQL procedure successfully completed. ... ... ... ... PL/SQL procedure successfully completed. Thank you for installing Oracle Application Express 19.2.0.00.18 Oracle Application Express is installed in the APEX_190200 schema. The structure of the link to the Application Express administration services is as follows: http://host:port/pls/apex/apex_admin (Oracle HTTP Server with mod_plsql) http://host:port/apex/apex_admin (Oracle XML DB HTTP listener with the embedded PL/SQL gateway) http://host:port/apex/apex_admin (Oracle REST Data Services) The structure of the link to the Application Express development interface is as follows: http://host:port/pls/apex (Oracle HTTP Server with mod_plsql) http://host:port/apex (Oracle XML DB HTTP listener with the embedded PL/SQL gateway) http://host:port/apex (Oracle REST Data Services) timing for: Phase 3 (Switch) Elapsed: 00:00:08.39 timing for: Complete Installation Elapsed: 00:06:24.88 PL/SQL procedure successfully completed.","title":"Install Apex 19.2 in database"},{"location":"installation/#change-setup-apex-administrator","text":"cd $ORACLE_HOME/apex sqlplus / as sysdba SQL -- no parameters @apxchpwd.sql ...set_appun.sql ================================================================================ This script can be used to change the password of an Application Express instance administrator. If the user does not yet exist, a user record will be created. ================================================================================ Enter the administrator's username [ADMIN] User \"ADMIN\" does not yet exist and will be created. Enter ADMIN's email [ADMIN] {specify email address} Enter ADMIN's password [] Created instance administrator ADMIN.","title":"Change / Setup Apex Administrator"},{"location":"installation/#enable-embedded-plsql-gateway-and-other-configuration-items","text":"cd $ORACLE_HOME/apex sqlplus / as sysdba SQL -- one parameter is oracle_home @apex_epg_config.sql /u01/app/oracle/product/12.2.0/dbhome_1 PL/SQL procedure successfully completed. ... ... ... ... PL/SQL procedure successfully completed. Commit complete. alter user anonymous identified by {complex password} account unlock; alter user xdb identified by {complex password} account unlock; EXEC DBMS_XDB.SETHTTPPORT(8080); BEGIN DBMS_NETWORK_ACL_ADMIN.APPEND_HOST_ACE( host = '*', ace = xs$ace_type(privilege_list = xs$name_list('connect'), principal_name = 'APEX_180200', principal_type = xs_acl.ptype_db)); END; / -- Below script contents can be found in Appendix A of this document @xdbconfig_anonymous.sql","title":"Enable Embedded PL/SQL Gateway and other configuration items"},{"location":"installation/#schema-install","text":"","title":"Schema Install"},{"location":"installation/#create-tablespace","text":"Create tablespace to contain the conductor_for_gluent's repository, for example: create tablespace tbs_c4g datafile '+dg_data' size 100M autoextend on next 1M maxsize 100M; or create tablespace tbs_c4g datafile '/u01/app/oracle/oradata/testinst/tbs_c4g01.dbf' size 100M autoextend on next 1M maxsize 1000M;","title":"Create Tablespace"},{"location":"installation/#create-user-and-privileges","text":"Create user conductor_for_gluent with above tablespace as the default tablespace, for example: create user conductor_for_gluent identified by \"{complex password}\" default tablespace tbs_c4g; alter user conductor_for_gluent quota unlimited on tbs_c4g; grant connect to conductor_for_gluent; grant resource to conductor_for_gluent; grant create database link to conductor_for_gluent; grant create synonym to conductor_for_gluent; grant create view to conductor_for_gluent; grant select any dictionary to conductor_for_gluent; grant select any table to conductor_for_gluent;","title":"Create User and Privileges"},{"location":"installation/#install-and-setup-the-objects","text":"The installation SQL scripts are located in gui directory where the backend scripts were installed (usually /u01/app/gluent/scripts or /u01/app/gluent/c4g-scripts . From this directory connect to the apex database (usually c4g_central is the tns name to use: You can set your environment to use the tnsnames.ora file you created during the backend setup. For example: cd /u01/app/gluent/c4g-scripts/tns export TNS_ADMIN=`pwd` cd ../gui sqlplus system/{complex password}@c4g_central","title":"Install and Setup the Objects"},{"location":"installation/#schema-setup","text":"Run the sql, no parameters - 1 prompt for tablespace spool c4g-setup-schema.log @c4g-setup-schema.sql Tablespace: tbs_c4g spool off","title":"Schema Setup"},{"location":"installation/#source-setup","text":"Run the sql, no parameters spool c4g-setup-source.log @c4g-setup-source.sql spool off","title":"Source Setup"},{"location":"installation/#seed-data-setup","text":"Run the sql, no parameters spool c4g-setup-seeddata.log @c4g-setup-seeddata.sql commit; spool off Note : Be sure to commit after running the script.","title":"Seed Data Setup"},{"location":"installation/#help-text-setup","text":"Run the sql, no parameters spool c4g-setup-helptext.log @c4g-setup-helptext.sql commit; spool off Note : Be sure to commit after running the script.","title":"Help Text Setup"},{"location":"installation/#apex-application-install","text":"","title":"Apex Application Install"},{"location":"installation/#create-the-workspace","text":"SQL -- run the sql, no parameters @c4g-apex-workspace.sql","title":"Create the Workspace"},{"location":"installation/#import-the-runtime-app-sql-script","text":"SQL -- run the sql, no parameters @c4g-apex-application.sql","title":"\"Import\" the runtime app (sql script)"},{"location":"installation/#connecting-to-conductor-for-gluent","text":"http://{hostname}:8080/apex/f?p=100:LOGIN_DESKTOP:25119307751525::::: Default Users Admin User: c4g_admin App User: c4g_user Please contact your Conductor for Gluent provider for password.","title":"Connecting to Conductor for Gluent"},{"location":"installation/#appendix-a-xdbconfig_anonymoussql","text":"DECLARE l_configxml XMLTYPE; l_value VARCHAR2(5) := 'true'; BEGIN l_configxml := DBMS_XDB.cfg_get(); IF l_configxml.existsNode('/xdbconfig/sysconfig/protocolconfig/httpconfig/allow-repository-anonymous-access') = 0 THEN -- Add config element begin SELECT insertChildXML( l_configxml , '/xdbconfig/sysconfig/protocolconfig/httpconfig' , 'allow-repository-anonymous-access' , XMLType(' allow-repository-anonymous-access xmlns=\"http://xmlns.oracle.com/xdb/xdbconfig.xsd\" ' || l_value || ' /allow-repository-anonymous-access ') , 'xmlns=\"http://xmlns.oracle.com/xdb/xdbconfig.xsd\"' ) INTO l_configxml FROM dual; exception when others then dbms_output.put_line( 'insert' ); -- ' raise; end; DBMS_OUTPUT.put_line('xdbconfig for anonymous now inserted.'); ELSE -- Update existing config element. begin SELECT updateXML( DBMS_XDB.cfg_get() , '/xdbconfig/sysconfig/protocolconfig/httpconfig/allow-repository-anonymous-access/text()' , XMLType(' allow-repository-anonymous-access xmlns=\"http://xmlns.oracle.com/xdb/xdbconfig.xsd\" ' || l_value || ' /allow-repository-anonymous-access ') , 'xmlns=\"http://xmlns.oracle.com/xdb/xdbconfig.xsd\"' ) INTO l_configxml FROM dual; exception when others then dbms_output.put_line( 'update'); -- ' raise; end; DBMS_OUTPUT.put_line('xdbconfig for anonymous now updated.'); END IF; DBMS_XDB.cfg_update(l_configxml); DBMS_XDB.cfg_refresh; END; /","title":"Appendix A - xdbconfig_anonymous.sql"},{"location":"relnotes/","text":"2.2.5 Corrected command parameters, so they take into account gluent version at DB, Table and Job Step levels Add feature to limit cmd parameters that show at Site and DB levels that do not make sense (e.g. ones that specify columns) Command parameters are available for Gluent versions 2.11 - 3.4 launch-guent-job updated so it will only attempt to launch jobs for it's database install Continued improvement the processing when recording information about Oracle and Hadoop Datasets Improvements to debug mode and logging 2.2.3 Incremental improvment in the processing details about Oracle Datasets 2.2.2 Lengthen columns from 30 to 128 for long naming support Correct issue in calendar GUI improvements 2.2.1 Renamed table and associated objects to get the length of them to fit in 30 characters. 2.2.0 Ability to add a new table adhawk rather than uploading an advisor report Column making works on char/varchar2 data types A generate drop statements or actual drop statements can be scheduled as a job step for partition maintenance of offloaded table data based on a Drop Threshold. GENERATE option added to OFFLOAD_DROP_ACTION application parameter to generate drop partition statements but not run them. Added column to Oracle Dataset Report that shows which partitions are eligible for dropping Metrics added on the Site Home and Database Home screens Known Issues Composite Partitions Keys do not work properly for the partition maintenance features. 2.1.3 Template Files updated to correctly reflect the changes in environment variables in release 2.1.0 Help Text installation is working without manual intervention Documentation Website added - https://swnerd.github.io/c4g-doc/","title":"Release Notes"},{"location":"relnotes/#225","text":"Corrected command parameters, so they take into account gluent version at DB, Table and Job Step levels Add feature to limit cmd parameters that show at Site and DB levels that do not make sense (e.g. ones that specify columns) Command parameters are available for Gluent versions 2.11 - 3.4 launch-guent-job updated so it will only attempt to launch jobs for it's database install Continued improvement the processing when recording information about Oracle and Hadoop Datasets Improvements to debug mode and logging","title":"2.2.5"},{"location":"relnotes/#223","text":"Incremental improvment in the processing details about Oracle Datasets","title":"2.2.3"},{"location":"relnotes/#222","text":"Lengthen columns from 30 to 128 for long naming support Correct issue in calendar GUI improvements","title":"2.2.2"},{"location":"relnotes/#221","text":"Renamed table and associated objects to get the length of them to fit in 30 characters.","title":"2.2.1"},{"location":"relnotes/#220","text":"Ability to add a new table adhawk rather than uploading an advisor report Column making works on char/varchar2 data types A generate drop statements or actual drop statements can be scheduled as a job step for partition maintenance of offloaded table data based on a Drop Threshold. GENERATE option added to OFFLOAD_DROP_ACTION application parameter to generate drop partition statements but not run them. Added column to Oracle Dataset Report that shows which partitions are eligible for dropping Metrics added on the Site Home and Database Home screens","title":"2.2.0"},{"location":"relnotes/#known-issues","text":"Composite Partitions Keys do not work properly for the partition maintenance features.","title":"Known Issues"},{"location":"relnotes/#213","text":"Template Files updated to correctly reflect the changes in environment variables in release 2.1.0 Help Text installation is working without manual intervention Documentation Website added - https://swnerd.github.io/c4g-doc/","title":"2.1.3"}]}